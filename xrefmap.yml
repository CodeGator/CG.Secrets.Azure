### YamlMime:XRefMap
sorted: true
references:
- uid: CG.Secrets.Azure.Repositories
  name: CG.Secrets.Azure.Repositories
  href: api/CG.Secrets.Azure.Repositories.html
  commentId: N:CG.Secrets.Azure.Repositories
  fullName: CG.Secrets.Azure.Repositories
  nameWithType: CG.Secrets.Azure.Repositories
- uid: CG.Secrets.Azure.Repositories.Options
  name: CG.Secrets.Azure.Repositories.Options
  href: api/CG.Secrets.Azure.Repositories.Options.html
  commentId: N:CG.Secrets.Azure.Repositories.Options
  fullName: CG.Secrets.Azure.Repositories.Options
  nameWithType: CG.Secrets.Azure.Repositories.Options
- uid: CG.Secrets.Azure.Repositories.Options.ChainedTokenLoginOptions
  name: ChainedTokenLoginOptions
  href: api/CG.Secrets.Azure.Repositories.Options.ChainedTokenLoginOptions.html
  commentId: T:CG.Secrets.Azure.Repositories.Options.ChainedTokenLoginOptions
  fullName: CG.Secrets.Azure.Repositories.Options.ChainedTokenLoginOptions
  nameWithType: ChainedTokenLoginOptions
- uid: CG.Secrets.Azure.Repositories.Options.ChainedTokenLoginOptions.CreateCredentials
  name: CreateCredentials()
  href: api/CG.Secrets.Azure.Repositories.Options.ChainedTokenLoginOptions.html#CG_Secrets_Azure_Repositories_Options_ChainedTokenLoginOptions_CreateCredentials
  commentId: M:CG.Secrets.Azure.Repositories.Options.ChainedTokenLoginOptions.CreateCredentials
  fullName: CG.Secrets.Azure.Repositories.Options.ChainedTokenLoginOptions.CreateCredentials()
  nameWithType: ChainedTokenLoginOptions.CreateCredentials()
- uid: CG.Secrets.Azure.Repositories.Options.ChainedTokenLoginOptions.CreateCredentials*
  name: CreateCredentials
  href: api/CG.Secrets.Azure.Repositories.Options.ChainedTokenLoginOptions.html#CG_Secrets_Azure_Repositories_Options_ChainedTokenLoginOptions_CreateCredentials_
  commentId: Overload:CG.Secrets.Azure.Repositories.Options.ChainedTokenLoginOptions.CreateCredentials
  isSpec: "True"
  fullName: CG.Secrets.Azure.Repositories.Options.ChainedTokenLoginOptions.CreateCredentials
  nameWithType: ChainedTokenLoginOptions.CreateCredentials
- uid: CG.Secrets.Azure.Repositories.Options.ChainedTokenLoginOptions.TenantId
  name: TenantId
  href: api/CG.Secrets.Azure.Repositories.Options.ChainedTokenLoginOptions.html#CG_Secrets_Azure_Repositories_Options_ChainedTokenLoginOptions_TenantId
  commentId: P:CG.Secrets.Azure.Repositories.Options.ChainedTokenLoginOptions.TenantId
  fullName: CG.Secrets.Azure.Repositories.Options.ChainedTokenLoginOptions.TenantId
  nameWithType: ChainedTokenLoginOptions.TenantId
- uid: CG.Secrets.Azure.Repositories.Options.ChainedTokenLoginOptions.TenantId*
  name: TenantId
  href: api/CG.Secrets.Azure.Repositories.Options.ChainedTokenLoginOptions.html#CG_Secrets_Azure_Repositories_Options_ChainedTokenLoginOptions_TenantId_
  commentId: Overload:CG.Secrets.Azure.Repositories.Options.ChainedTokenLoginOptions.TenantId
  isSpec: "True"
  fullName: CG.Secrets.Azure.Repositories.Options.ChainedTokenLoginOptions.TenantId
  nameWithType: ChainedTokenLoginOptions.TenantId
- uid: CG.Secrets.Azure.Repositories.Options.ClientSecretLoginOptions
  name: ClientSecretLoginOptions
  href: api/CG.Secrets.Azure.Repositories.Options.ClientSecretLoginOptions.html
  commentId: T:CG.Secrets.Azure.Repositories.Options.ClientSecretLoginOptions
  fullName: CG.Secrets.Azure.Repositories.Options.ClientSecretLoginOptions
  nameWithType: ClientSecretLoginOptions
- uid: CG.Secrets.Azure.Repositories.Options.ClientSecretLoginOptions.ClientId
  name: ClientId
  href: api/CG.Secrets.Azure.Repositories.Options.ClientSecretLoginOptions.html#CG_Secrets_Azure_Repositories_Options_ClientSecretLoginOptions_ClientId
  commentId: P:CG.Secrets.Azure.Repositories.Options.ClientSecretLoginOptions.ClientId
  fullName: CG.Secrets.Azure.Repositories.Options.ClientSecretLoginOptions.ClientId
  nameWithType: ClientSecretLoginOptions.ClientId
- uid: CG.Secrets.Azure.Repositories.Options.ClientSecretLoginOptions.ClientId*
  name: ClientId
  href: api/CG.Secrets.Azure.Repositories.Options.ClientSecretLoginOptions.html#CG_Secrets_Azure_Repositories_Options_ClientSecretLoginOptions_ClientId_
  commentId: Overload:CG.Secrets.Azure.Repositories.Options.ClientSecretLoginOptions.ClientId
  isSpec: "True"
  fullName: CG.Secrets.Azure.Repositories.Options.ClientSecretLoginOptions.ClientId
  nameWithType: ClientSecretLoginOptions.ClientId
- uid: CG.Secrets.Azure.Repositories.Options.ClientSecretLoginOptions.CreateCredentials
  name: CreateCredentials()
  href: api/CG.Secrets.Azure.Repositories.Options.ClientSecretLoginOptions.html#CG_Secrets_Azure_Repositories_Options_ClientSecretLoginOptions_CreateCredentials
  commentId: M:CG.Secrets.Azure.Repositories.Options.ClientSecretLoginOptions.CreateCredentials
  fullName: CG.Secrets.Azure.Repositories.Options.ClientSecretLoginOptions.CreateCredentials()
  nameWithType: ClientSecretLoginOptions.CreateCredentials()
- uid: CG.Secrets.Azure.Repositories.Options.ClientSecretLoginOptions.CreateCredentials*
  name: CreateCredentials
  href: api/CG.Secrets.Azure.Repositories.Options.ClientSecretLoginOptions.html#CG_Secrets_Azure_Repositories_Options_ClientSecretLoginOptions_CreateCredentials_
  commentId: Overload:CG.Secrets.Azure.Repositories.Options.ClientSecretLoginOptions.CreateCredentials
  isSpec: "True"
  fullName: CG.Secrets.Azure.Repositories.Options.ClientSecretLoginOptions.CreateCredentials
  nameWithType: ClientSecretLoginOptions.CreateCredentials
- uid: CG.Secrets.Azure.Repositories.Options.ClientSecretLoginOptions.TenantId
  name: TenantId
  href: api/CG.Secrets.Azure.Repositories.Options.ClientSecretLoginOptions.html#CG_Secrets_Azure_Repositories_Options_ClientSecretLoginOptions_TenantId
  commentId: P:CG.Secrets.Azure.Repositories.Options.ClientSecretLoginOptions.TenantId
  fullName: CG.Secrets.Azure.Repositories.Options.ClientSecretLoginOptions.TenantId
  nameWithType: ClientSecretLoginOptions.TenantId
- uid: CG.Secrets.Azure.Repositories.Options.ClientSecretLoginOptions.TenantId*
  name: TenantId
  href: api/CG.Secrets.Azure.Repositories.Options.ClientSecretLoginOptions.html#CG_Secrets_Azure_Repositories_Options_ClientSecretLoginOptions_TenantId_
  commentId: Overload:CG.Secrets.Azure.Repositories.Options.ClientSecretLoginOptions.TenantId
  isSpec: "True"
  fullName: CG.Secrets.Azure.Repositories.Options.ClientSecretLoginOptions.TenantId
  nameWithType: ClientSecretLoginOptions.TenantId
- uid: CG.Secrets.Azure.Repositories.Options.ClientSecretLoginOptions.TokenCredentialOptions
  name: TokenCredentialOptions
  href: api/CG.Secrets.Azure.Repositories.Options.ClientSecretLoginOptions.html#CG_Secrets_Azure_Repositories_Options_ClientSecretLoginOptions_TokenCredentialOptions
  commentId: P:CG.Secrets.Azure.Repositories.Options.ClientSecretLoginOptions.TokenCredentialOptions
  fullName: CG.Secrets.Azure.Repositories.Options.ClientSecretLoginOptions.TokenCredentialOptions
  nameWithType: ClientSecretLoginOptions.TokenCredentialOptions
- uid: CG.Secrets.Azure.Repositories.Options.ClientSecretLoginOptions.TokenCredentialOptions*
  name: TokenCredentialOptions
  href: api/CG.Secrets.Azure.Repositories.Options.ClientSecretLoginOptions.html#CG_Secrets_Azure_Repositories_Options_ClientSecretLoginOptions_TokenCredentialOptions_
  commentId: Overload:CG.Secrets.Azure.Repositories.Options.ClientSecretLoginOptions.TokenCredentialOptions
  isSpec: "True"
  fullName: CG.Secrets.Azure.Repositories.Options.ClientSecretLoginOptions.TokenCredentialOptions
  nameWithType: ClientSecretLoginOptions.TokenCredentialOptions
- uid: CG.Secrets.Azure.Repositories.Options.DefaultAzureLoginOptions
  name: DefaultAzureLoginOptions
  href: api/CG.Secrets.Azure.Repositories.Options.DefaultAzureLoginOptions.html
  commentId: T:CG.Secrets.Azure.Repositories.Options.DefaultAzureLoginOptions
  fullName: CG.Secrets.Azure.Repositories.Options.DefaultAzureLoginOptions
  nameWithType: DefaultAzureLoginOptions
- uid: CG.Secrets.Azure.Repositories.Options.DefaultAzureLoginOptions.ClientId
  name: ClientId
  href: api/CG.Secrets.Azure.Repositories.Options.DefaultAzureLoginOptions.html#CG_Secrets_Azure_Repositories_Options_DefaultAzureLoginOptions_ClientId
  commentId: P:CG.Secrets.Azure.Repositories.Options.DefaultAzureLoginOptions.ClientId
  fullName: CG.Secrets.Azure.Repositories.Options.DefaultAzureLoginOptions.ClientId
  nameWithType: DefaultAzureLoginOptions.ClientId
- uid: CG.Secrets.Azure.Repositories.Options.DefaultAzureLoginOptions.ClientId*
  name: ClientId
  href: api/CG.Secrets.Azure.Repositories.Options.DefaultAzureLoginOptions.html#CG_Secrets_Azure_Repositories_Options_DefaultAzureLoginOptions_ClientId_
  commentId: Overload:CG.Secrets.Azure.Repositories.Options.DefaultAzureLoginOptions.ClientId
  isSpec: "True"
  fullName: CG.Secrets.Azure.Repositories.Options.DefaultAzureLoginOptions.ClientId
  nameWithType: DefaultAzureLoginOptions.ClientId
- uid: CG.Secrets.Azure.Repositories.Options.DefaultAzureLoginOptions.CreateCredentials
  name: CreateCredentials()
  href: api/CG.Secrets.Azure.Repositories.Options.DefaultAzureLoginOptions.html#CG_Secrets_Azure_Repositories_Options_DefaultAzureLoginOptions_CreateCredentials
  commentId: M:CG.Secrets.Azure.Repositories.Options.DefaultAzureLoginOptions.CreateCredentials
  fullName: CG.Secrets.Azure.Repositories.Options.DefaultAzureLoginOptions.CreateCredentials()
  nameWithType: DefaultAzureLoginOptions.CreateCredentials()
- uid: CG.Secrets.Azure.Repositories.Options.DefaultAzureLoginOptions.CreateCredentials*
  name: CreateCredentials
  href: api/CG.Secrets.Azure.Repositories.Options.DefaultAzureLoginOptions.html#CG_Secrets_Azure_Repositories_Options_DefaultAzureLoginOptions_CreateCredentials_
  commentId: Overload:CG.Secrets.Azure.Repositories.Options.DefaultAzureLoginOptions.CreateCredentials
  isSpec: "True"
  fullName: CG.Secrets.Azure.Repositories.Options.DefaultAzureLoginOptions.CreateCredentials
  nameWithType: DefaultAzureLoginOptions.CreateCredentials
- uid: CG.Secrets.Azure.Repositories.Options.EnvironmentLoginOptions
  name: EnvironmentLoginOptions
  href: api/CG.Secrets.Azure.Repositories.Options.EnvironmentLoginOptions.html
  commentId: T:CG.Secrets.Azure.Repositories.Options.EnvironmentLoginOptions
  fullName: CG.Secrets.Azure.Repositories.Options.EnvironmentLoginOptions
  nameWithType: EnvironmentLoginOptions
- uid: CG.Secrets.Azure.Repositories.Options.EnvironmentLoginOptions.CreateCredentials
  name: CreateCredentials()
  href: api/CG.Secrets.Azure.Repositories.Options.EnvironmentLoginOptions.html#CG_Secrets_Azure_Repositories_Options_EnvironmentLoginOptions_CreateCredentials
  commentId: M:CG.Secrets.Azure.Repositories.Options.EnvironmentLoginOptions.CreateCredentials
  fullName: CG.Secrets.Azure.Repositories.Options.EnvironmentLoginOptions.CreateCredentials()
  nameWithType: EnvironmentLoginOptions.CreateCredentials()
- uid: CG.Secrets.Azure.Repositories.Options.EnvironmentLoginOptions.CreateCredentials*
  name: CreateCredentials
  href: api/CG.Secrets.Azure.Repositories.Options.EnvironmentLoginOptions.html#CG_Secrets_Azure_Repositories_Options_EnvironmentLoginOptions_CreateCredentials_
  commentId: Overload:CG.Secrets.Azure.Repositories.Options.EnvironmentLoginOptions.CreateCredentials
  isSpec: "True"
  fullName: CG.Secrets.Azure.Repositories.Options.EnvironmentLoginOptions.CreateCredentials
  nameWithType: EnvironmentLoginOptions.CreateCredentials
- uid: CG.Secrets.Azure.Repositories.Options.LoginOptions
  name: LoginOptions
  href: api/CG.Secrets.Azure.Repositories.Options.LoginOptions.html
  commentId: T:CG.Secrets.Azure.Repositories.Options.LoginOptions
  fullName: CG.Secrets.Azure.Repositories.Options.LoginOptions
  nameWithType: LoginOptions
- uid: CG.Secrets.Azure.Repositories.Options.LoginOptions.CreateCredentials
  name: CreateCredentials()
  href: api/CG.Secrets.Azure.Repositories.Options.LoginOptions.html#CG_Secrets_Azure_Repositories_Options_LoginOptions_CreateCredentials
  commentId: M:CG.Secrets.Azure.Repositories.Options.LoginOptions.CreateCredentials
  fullName: CG.Secrets.Azure.Repositories.Options.LoginOptions.CreateCredentials()
  nameWithType: LoginOptions.CreateCredentials()
- uid: CG.Secrets.Azure.Repositories.Options.LoginOptions.CreateCredentials*
  name: CreateCredentials
  href: api/CG.Secrets.Azure.Repositories.Options.LoginOptions.html#CG_Secrets_Azure_Repositories_Options_LoginOptions_CreateCredentials_
  commentId: Overload:CG.Secrets.Azure.Repositories.Options.LoginOptions.CreateCredentials
  isSpec: "True"
  fullName: CG.Secrets.Azure.Repositories.Options.LoginOptions.CreateCredentials
  nameWithType: LoginOptions.CreateCredentials
- uid: CG.Secrets.Azure.Repositories.Options.SecretRepositoryOptions
  name: SecretRepositoryOptions
  href: api/CG.Secrets.Azure.Repositories.Options.SecretRepositoryOptions.html
  commentId: T:CG.Secrets.Azure.Repositories.Options.SecretRepositoryOptions
  fullName: CG.Secrets.Azure.Repositories.Options.SecretRepositoryOptions
  nameWithType: SecretRepositoryOptions
- uid: CG.Secrets.Azure.Repositories.Options.SecretRepositoryOptions.KeyVaultName
  name: KeyVaultName
  href: api/CG.Secrets.Azure.Repositories.Options.SecretRepositoryOptions.html#CG_Secrets_Azure_Repositories_Options_SecretRepositoryOptions_KeyVaultName
  commentId: P:CG.Secrets.Azure.Repositories.Options.SecretRepositoryOptions.KeyVaultName
  fullName: CG.Secrets.Azure.Repositories.Options.SecretRepositoryOptions.KeyVaultName
  nameWithType: SecretRepositoryOptions.KeyVaultName
- uid: CG.Secrets.Azure.Repositories.Options.SecretRepositoryOptions.KeyVaultName*
  name: KeyVaultName
  href: api/CG.Secrets.Azure.Repositories.Options.SecretRepositoryOptions.html#CG_Secrets_Azure_Repositories_Options_SecretRepositoryOptions_KeyVaultName_
  commentId: Overload:CG.Secrets.Azure.Repositories.Options.SecretRepositoryOptions.KeyVaultName
  isSpec: "True"
  fullName: CG.Secrets.Azure.Repositories.Options.SecretRepositoryOptions.KeyVaultName
  nameWithType: SecretRepositoryOptions.KeyVaultName
- uid: CG.Secrets.Azure.Repositories.Options.SecretRepositoryOptions.LoginType
  name: LoginType
  href: api/CG.Secrets.Azure.Repositories.Options.SecretRepositoryOptions.html#CG_Secrets_Azure_Repositories_Options_SecretRepositoryOptions_LoginType
  commentId: P:CG.Secrets.Azure.Repositories.Options.SecretRepositoryOptions.LoginType
  fullName: CG.Secrets.Azure.Repositories.Options.SecretRepositoryOptions.LoginType
  nameWithType: SecretRepositoryOptions.LoginType
- uid: CG.Secrets.Azure.Repositories.Options.SecretRepositoryOptions.LoginType*
  name: LoginType
  href: api/CG.Secrets.Azure.Repositories.Options.SecretRepositoryOptions.html#CG_Secrets_Azure_Repositories_Options_SecretRepositoryOptions_LoginType_
  commentId: Overload:CG.Secrets.Azure.Repositories.Options.SecretRepositoryOptions.LoginType
  isSpec: "True"
  fullName: CG.Secrets.Azure.Repositories.Options.SecretRepositoryOptions.LoginType
  nameWithType: SecretRepositoryOptions.LoginType
- uid: CG.Secrets.Azure.Repositories.Options.VisualStudioCodeLoginOptions
  name: VisualStudioCodeLoginOptions
  href: api/CG.Secrets.Azure.Repositories.Options.VisualStudioCodeLoginOptions.html
  commentId: T:CG.Secrets.Azure.Repositories.Options.VisualStudioCodeLoginOptions
  fullName: CG.Secrets.Azure.Repositories.Options.VisualStudioCodeLoginOptions
  nameWithType: VisualStudioCodeLoginOptions
- uid: CG.Secrets.Azure.Repositories.Options.VisualStudioCodeLoginOptions.CreateCredentials
  name: CreateCredentials()
  href: api/CG.Secrets.Azure.Repositories.Options.VisualStudioCodeLoginOptions.html#CG_Secrets_Azure_Repositories_Options_VisualStudioCodeLoginOptions_CreateCredentials
  commentId: M:CG.Secrets.Azure.Repositories.Options.VisualStudioCodeLoginOptions.CreateCredentials
  fullName: CG.Secrets.Azure.Repositories.Options.VisualStudioCodeLoginOptions.CreateCredentials()
  nameWithType: VisualStudioCodeLoginOptions.CreateCredentials()
- uid: CG.Secrets.Azure.Repositories.Options.VisualStudioCodeLoginOptions.CreateCredentials*
  name: CreateCredentials
  href: api/CG.Secrets.Azure.Repositories.Options.VisualStudioCodeLoginOptions.html#CG_Secrets_Azure_Repositories_Options_VisualStudioCodeLoginOptions_CreateCredentials_
  commentId: Overload:CG.Secrets.Azure.Repositories.Options.VisualStudioCodeLoginOptions.CreateCredentials
  isSpec: "True"
  fullName: CG.Secrets.Azure.Repositories.Options.VisualStudioCodeLoginOptions.CreateCredentials
  nameWithType: VisualStudioCodeLoginOptions.CreateCredentials
- uid: CG.Secrets.Azure.Repositories.Options.VisualStudioCodeLoginOptions.TenantId
  name: TenantId
  href: api/CG.Secrets.Azure.Repositories.Options.VisualStudioCodeLoginOptions.html#CG_Secrets_Azure_Repositories_Options_VisualStudioCodeLoginOptions_TenantId
  commentId: P:CG.Secrets.Azure.Repositories.Options.VisualStudioCodeLoginOptions.TenantId
  fullName: CG.Secrets.Azure.Repositories.Options.VisualStudioCodeLoginOptions.TenantId
  nameWithType: VisualStudioCodeLoginOptions.TenantId
- uid: CG.Secrets.Azure.Repositories.Options.VisualStudioCodeLoginOptions.TenantId*
  name: TenantId
  href: api/CG.Secrets.Azure.Repositories.Options.VisualStudioCodeLoginOptions.html#CG_Secrets_Azure_Repositories_Options_VisualStudioCodeLoginOptions_TenantId_
  commentId: Overload:CG.Secrets.Azure.Repositories.Options.VisualStudioCodeLoginOptions.TenantId
  isSpec: "True"
  fullName: CG.Secrets.Azure.Repositories.Options.VisualStudioCodeLoginOptions.TenantId
  nameWithType: VisualStudioCodeLoginOptions.TenantId
- uid: CG.Secrets.Azure.Repositories.Options.VisualStudioLoginOptions
  name: VisualStudioLoginOptions
  href: api/CG.Secrets.Azure.Repositories.Options.VisualStudioLoginOptions.html
  commentId: T:CG.Secrets.Azure.Repositories.Options.VisualStudioLoginOptions
  fullName: CG.Secrets.Azure.Repositories.Options.VisualStudioLoginOptions
  nameWithType: VisualStudioLoginOptions
- uid: CG.Secrets.Azure.Repositories.Options.VisualStudioLoginOptions.CreateCredentials
  name: CreateCredentials()
  href: api/CG.Secrets.Azure.Repositories.Options.VisualStudioLoginOptions.html#CG_Secrets_Azure_Repositories_Options_VisualStudioLoginOptions_CreateCredentials
  commentId: M:CG.Secrets.Azure.Repositories.Options.VisualStudioLoginOptions.CreateCredentials
  fullName: CG.Secrets.Azure.Repositories.Options.VisualStudioLoginOptions.CreateCredentials()
  nameWithType: VisualStudioLoginOptions.CreateCredentials()
- uid: CG.Secrets.Azure.Repositories.Options.VisualStudioLoginOptions.CreateCredentials*
  name: CreateCredentials
  href: api/CG.Secrets.Azure.Repositories.Options.VisualStudioLoginOptions.html#CG_Secrets_Azure_Repositories_Options_VisualStudioLoginOptions_CreateCredentials_
  commentId: Overload:CG.Secrets.Azure.Repositories.Options.VisualStudioLoginOptions.CreateCredentials
  isSpec: "True"
  fullName: CG.Secrets.Azure.Repositories.Options.VisualStudioLoginOptions.CreateCredentials
  nameWithType: VisualStudioLoginOptions.CreateCredentials
- uid: CG.Secrets.Azure.Repositories.Options.VisualStudioLoginOptions.TenantId
  name: TenantId
  href: api/CG.Secrets.Azure.Repositories.Options.VisualStudioLoginOptions.html#CG_Secrets_Azure_Repositories_Options_VisualStudioLoginOptions_TenantId
  commentId: P:CG.Secrets.Azure.Repositories.Options.VisualStudioLoginOptions.TenantId
  fullName: CG.Secrets.Azure.Repositories.Options.VisualStudioLoginOptions.TenantId
  nameWithType: VisualStudioLoginOptions.TenantId
- uid: CG.Secrets.Azure.Repositories.Options.VisualStudioLoginOptions.TenantId*
  name: TenantId
  href: api/CG.Secrets.Azure.Repositories.Options.VisualStudioLoginOptions.html#CG_Secrets_Azure_Repositories_Options_VisualStudioLoginOptions_TenantId_
  commentId: Overload:CG.Secrets.Azure.Repositories.Options.VisualStudioLoginOptions.TenantId
  isSpec: "True"
  fullName: CG.Secrets.Azure.Repositories.Options.VisualStudioLoginOptions.TenantId
  nameWithType: VisualStudioLoginOptions.TenantId
- uid: CG.Secrets.Azure.Repositories.SecretRepository
  name: SecretRepository
  href: api/CG.Secrets.Azure.Repositories.SecretRepository.html
  commentId: T:CG.Secrets.Azure.Repositories.SecretRepository
  fullName: CG.Secrets.Azure.Repositories.SecretRepository
  nameWithType: SecretRepository
- uid: CG.Secrets.Azure.Repositories.SecretRepository.#ctor(Azure.Security.KeyVault.Secrets.SecretClient)
  name: SecretRepository(SecretClient)
  href: api/CG.Secrets.Azure.Repositories.SecretRepository.html#CG_Secrets_Azure_Repositories_SecretRepository__ctor_Azure_Security_KeyVault_Secrets_SecretClient_
  commentId: M:CG.Secrets.Azure.Repositories.SecretRepository.#ctor(Azure.Security.KeyVault.Secrets.SecretClient)
  fullName: CG.Secrets.Azure.Repositories.SecretRepository.SecretRepository(Azure.Security.KeyVault.Secrets.SecretClient)
  nameWithType: SecretRepository.SecretRepository(SecretClient)
- uid: CG.Secrets.Azure.Repositories.SecretRepository.#ctor*
  name: SecretRepository
  href: api/CG.Secrets.Azure.Repositories.SecretRepository.html#CG_Secrets_Azure_Repositories_SecretRepository__ctor_
  commentId: Overload:CG.Secrets.Azure.Repositories.SecretRepository.#ctor
  isSpec: "True"
  fullName: CG.Secrets.Azure.Repositories.SecretRepository.SecretRepository
  nameWithType: SecretRepository.SecretRepository
- uid: CG.Secrets.Azure.Repositories.SecretRepository.GetByNameAsync(System.String,System.Threading.CancellationToken)
  name: GetByNameAsync(String, CancellationToken)
  href: api/CG.Secrets.Azure.Repositories.SecretRepository.html#CG_Secrets_Azure_Repositories_SecretRepository_GetByNameAsync_System_String_System_Threading_CancellationToken_
  commentId: M:CG.Secrets.Azure.Repositories.SecretRepository.GetByNameAsync(System.String,System.Threading.CancellationToken)
  fullName: CG.Secrets.Azure.Repositories.SecretRepository.GetByNameAsync(System.String, System.Threading.CancellationToken)
  nameWithType: SecretRepository.GetByNameAsync(String, CancellationToken)
- uid: CG.Secrets.Azure.Repositories.SecretRepository.GetByNameAsync*
  name: GetByNameAsync
  href: api/CG.Secrets.Azure.Repositories.SecretRepository.html#CG_Secrets_Azure_Repositories_SecretRepository_GetByNameAsync_
  commentId: Overload:CG.Secrets.Azure.Repositories.SecretRepository.GetByNameAsync
  isSpec: "True"
  fullName: CG.Secrets.Azure.Repositories.SecretRepository.GetByNameAsync
  nameWithType: SecretRepository.GetByNameAsync
- uid: CG.Secrets.Azure.Repositories.SecretRepository.SecretClient
  name: SecretClient
  href: api/CG.Secrets.Azure.Repositories.SecretRepository.html#CG_Secrets_Azure_Repositories_SecretRepository_SecretClient
  commentId: P:CG.Secrets.Azure.Repositories.SecretRepository.SecretClient
  fullName: CG.Secrets.Azure.Repositories.SecretRepository.SecretClient
  nameWithType: SecretRepository.SecretClient
- uid: CG.Secrets.Azure.Repositories.SecretRepository.SecretClient*
  name: SecretClient
  href: api/CG.Secrets.Azure.Repositories.SecretRepository.html#CG_Secrets_Azure_Repositories_SecretRepository_SecretClient_
  commentId: Overload:CG.Secrets.Azure.Repositories.SecretRepository.SecretClient
  isSpec: "True"
  fullName: CG.Secrets.Azure.Repositories.SecretRepository.SecretClient
  nameWithType: SecretRepository.SecretClient
- uid: CG.Secrets.Azure.Repositories.SecretRepository.SetByNameAsync(System.String,System.String,System.Threading.CancellationToken)
  name: SetByNameAsync(String, String, CancellationToken)
  href: api/CG.Secrets.Azure.Repositories.SecretRepository.html#CG_Secrets_Azure_Repositories_SecretRepository_SetByNameAsync_System_String_System_String_System_Threading_CancellationToken_
  commentId: M:CG.Secrets.Azure.Repositories.SecretRepository.SetByNameAsync(System.String,System.String,System.Threading.CancellationToken)
  fullName: CG.Secrets.Azure.Repositories.SecretRepository.SetByNameAsync(System.String, System.String, System.Threading.CancellationToken)
  nameWithType: SecretRepository.SetByNameAsync(String, String, CancellationToken)
- uid: CG.Secrets.Azure.Repositories.SecretRepository.SetByNameAsync*
  name: SetByNameAsync
  href: api/CG.Secrets.Azure.Repositories.SecretRepository.html#CG_Secrets_Azure_Repositories_SecretRepository_SetByNameAsync_
  commentId: Overload:CG.Secrets.Azure.Repositories.SecretRepository.SetByNameAsync
  isSpec: "True"
  fullName: CG.Secrets.Azure.Repositories.SecretRepository.SetByNameAsync
  nameWithType: SecretRepository.SetByNameAsync
- uid: Microsoft.Extensions.DependencyInjection
  name: Microsoft.Extensions.DependencyInjection
  href: api/Microsoft.Extensions.DependencyInjection.html
  commentId: N:Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
- uid: Microsoft.Extensions.DependencyInjection.SecretsAzureServiceCollectionExtensions
  name: SecretsAzureServiceCollectionExtensions
  href: api/Microsoft.Extensions.DependencyInjection.SecretsAzureServiceCollectionExtensions.html
  commentId: T:Microsoft.Extensions.DependencyInjection.SecretsAzureServiceCollectionExtensions
  fullName: Microsoft.Extensions.DependencyInjection.SecretsAzureServiceCollectionExtensions
  nameWithType: SecretsAzureServiceCollectionExtensions
- uid: Microsoft.Extensions.DependencyInjection.SecretsAzureServiceCollectionExtensions.AddAzureRepositories(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.DependencyInjection.ServiceLifetime)
  name: AddAzureRepositories(IServiceCollection, IConfiguration, ServiceLifetime)
  href: api/Microsoft.Extensions.DependencyInjection.SecretsAzureServiceCollectionExtensions.html#Microsoft_Extensions_DependencyInjection_SecretsAzureServiceCollectionExtensions_AddAzureRepositories_Microsoft_Extensions_DependencyInjection_IServiceCollection_Microsoft_Extensions_Configuration_IConfiguration_Microsoft_Extensions_DependencyInjection_ServiceLifetime_
  commentId: M:Microsoft.Extensions.DependencyInjection.SecretsAzureServiceCollectionExtensions.AddAzureRepositories(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.DependencyInjection.ServiceLifetime)
  fullName: Microsoft.Extensions.DependencyInjection.SecretsAzureServiceCollectionExtensions.AddAzureRepositories(Microsoft.Extensions.DependencyInjection.IServiceCollection, Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.DependencyInjection.ServiceLifetime)
  nameWithType: SecretsAzureServiceCollectionExtensions.AddAzureRepositories(IServiceCollection, IConfiguration, ServiceLifetime)
- uid: Microsoft.Extensions.DependencyInjection.SecretsAzureServiceCollectionExtensions.AddAzureRepositories*
  name: AddAzureRepositories
  href: api/Microsoft.Extensions.DependencyInjection.SecretsAzureServiceCollectionExtensions.html#Microsoft_Extensions_DependencyInjection_SecretsAzureServiceCollectionExtensions_AddAzureRepositories_
  commentId: Overload:Microsoft.Extensions.DependencyInjection.SecretsAzureServiceCollectionExtensions.AddAzureRepositories
  isSpec: "True"
  fullName: Microsoft.Extensions.DependencyInjection.SecretsAzureServiceCollectionExtensions.AddAzureRepositories
  nameWithType: SecretsAzureServiceCollectionExtensions.AddAzureRepositories
